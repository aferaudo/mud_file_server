name: Workflow testing the server on multiple os

on:
  push:
    paths-ignore:
      - 'README.md'
  workflow_dispatch:

defaults:
  run:
    working-directory: mudfs

jobs:
  # build-on-linux:
  #   # strategy:
  #   #   matrix:
  #   #     os: [ubuntu-latest]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3.5.3
  #   - name: Use Node.js 18.17 on ubuntu-latest
  #     uses: actions/setup-node@v3.7.0
  #     with:
  #       node-version: 18.17
  #   - name: Start MongoDB
  #     uses: supercharge/mongodb-github-action@1.9.0
  #     with:
  #       mongodb-version: 6.0
  #       mongodb-username: ${{ secrets.MONGODB_USER }}
  #       mongodb-password: ${{ secrets.MONGODB_PASSWORD }}
  #       mongodb-db: mudFile
  #       mongodb-port: 27017
  #   - name: Installing needed packages
  #     run: npm ci
  #   - name: Inserting example elements in db
  #     working-directory: mudfs/examples
  #     run: node populationdb.js mongodb://${{ secrets.MONGODB_USER }}:${{ secrets.MONGODB_PASSWORD }}@localhost:27017/mudFile json_files/
  #   - name: Testing application
  #     run: npm test
  #     env:
  #       MONGODB_USER: ${{ secrets.MONGODB_USER }}
  #       MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
  #       MONGODB_LOCATION: localhost:27017
  #       MONGODB_DB: mudFile

  build-on-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3.5.3
    - name: Pulling mongo image
      run: docker pull mongo:6.0
    - name: Creating mongo container
      run: docker run --name mongo-example --publish 27017:27017 -d mongo:6.0
    - name: Creating mongo admin user
      run: docker exec mongo-example mongosh admin --eval \'db.createUser({user:${{ secrets.MONGODB_USER }}, pwd:${{ secrets.MONGODB_PASSWORD }}, roles:[\"userAdminAnyDatabase\"]})\'
    - name: Use Node.js 18.17 on windows-latest
      uses: actions/setup-node@v3.7.0
      with:
        node-version: 18.17
    - name: Installing needed packages
      run: npm ci
    - name: Testing docker
      run: docker ps -a
    - name: sleeping - waiting db
      run: sleep 30
    # - name: testing container
    #   run: docker exec --tty mongo-example mongosh --port 27017 --eval "db.serverStatus()"
    - name: Inserting example elements in db
      working-directory: mudfs/examples
      run: node populationdb.js mongodb://${{ secrets.MONGODB_USER }}:${{ secrets.MONGODB_PASSWORD }}@127.0.0.1:27017/mudFile?authSource=admin json_files/
    - name: Testing application
      run: npm test
      env:
        MONGODB_USER: ${{ secrets.MONGODB_USER }}
        MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
        MONGODB_LOCATION: 127.0.0.1:27017
        MONGODB_DB: "mudFile"


